---
description: 
globs: apps/news/**/*.py,templates/news/**/*.html
alwaysApply: false
---
---
description: Conventions specific to the News app.
globs: apps/news/**/*.py,templates/news/**/*.html
tags: app, news, blog, backend, frontend
---

# News App Conventions

These rules apply specifically to the `apps.news` Django application, complementing the general Django and frontend rules.

## Model (`NewsPost`)

*   **Fields:** Adhere to the established fields (`title`, `slug`, `content`, `author`, `status`, `published_at`, `created_at`, `updated_at`).
*   **Slug Generation:** Slugs MUST be unique and are auto-generated from the `title` via the overridden `save()` method if left blank.
*   **Status Workflow:** Posts start as `'draft'`. Changing `status` to `'published'` automatically sets the `published_at` timestamp via the `save()` method.
*   **Author:** The `author` field links to the `User` model. It can be null/blank.
*   **Ordering:** Default ordering is by `-published_at`, then `-created_at`.

## Admin (`NewsPostAdmin`)

*   Use the configured `list_display`, `list_filter`, `search_fields`, `prepopulated_fields`, `date_hierarchy`, and `readonly_fields` for effective management.
*   `list_editable = ('status',)` allows quick status changes.

## Views

*   **CBVs Preferred:** Use `NewsListView` and `NewsDetailView` (inheriting from generic Django CBVs) as the standard.
*   **Filtering:** Public-facing views (`NewsListView`, `NewsDetailView`) MUST filter querysets to only include posts with `status='published'`.

## URLs

*   Use the `news` namespace.
*   Use `name='list'` for the list view URL.
*   Use `name='detail'` for the detail view URL, accepting a `slug` parameter.

## Templates

*   App templates reside in `templates/news/`.
*   Use `_news_card.html` partial for displaying post summaries consistently (in list view and on homepage).
*   Use `partials/_pagination.html` for list view pagination.
*   Detail view (`news_detail.html`) should use Tailwind `prose` classes for content readability.
*   Use `{% url 'news:...' %}` for linking.

## Content

*   The `content` field stores the main body. While currently plain text/HTML, it's designed to potentially support Markdown rendering later (requires adding a filter/library).
*   Use the `|safe` filter judiciously when rendering `content`, assuming the content source is trusted or has been sanitized.

## Integration

*   The `HomePageView` queries and displays the latest 3 published posts using the `_news_card.html` partial. 